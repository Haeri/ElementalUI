name: C++ Builder

on: 
  push:
    branches:
    - master

jobs:

  build-win:
   name: Windows Build
   runs-on: windows-latest
   strategy:
     matrix: 
       conf: [Release]
       type: [static, dynamic]
   steps:
    - name: Download Repository
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Setup Environment
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Generate Solution
      run: ./tools/generate_project_win.bat -${{ matrix.type }} -s
    - name: Debug
      if: ${{ failure() }}
      run: |
        cd ./build
        ls -la
        tail -n 1000 vcpkg-manifest-install.log
    - name: Build
      run: |
        MSBuild.exe ./build/elem.sln /p:Configuration=${{ matrix.conf }}
    - name: Package
      run: ./tools/package_win.bat -${{ matrix.type }} -s
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: elem_x64-windows
        path: |
          ./lib
          ./bin
          ./include
    
  build-linux:
   name: Linux Build
   runs-on: ubuntu-latest
   strategy:
     matrix: 
       conf: [Release]
       type: [static, dynamic]
   steps:
    - name: Download Repository
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Setup Environment
      run: |
        sudo apt update
        sudo apt install libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev
    - name: Generate Solution
      run: ./tools/generate_project_linux.sh -${{ matrix.type }}
    - name: Debug
      if: ${{ failure() }}
      run: |
        cd ./build
        ls -la
        tail -n 1000 vcpkg-manifest-install.log
    - name: Build
      run: |
        cd ./build
        make config=${{ matrix.conf }}
    - name: Package
      run: ./tools/package_linux.sh -${{ matrix.type }}
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: elem_x64-linux
        path: |
          ./bin
          ./lib
          ./include

  build-mac:
   name: Mac Build
   runs-on: macos-latest
   strategy:
     matrix: 
       conf: [Release]
       type: [static, dynamic]
   steps:
    - name: Download Repository
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Generate Solution
      run: ./tools/generate_project_mac.sh -${{ matrix.type }}
    - name: Debug
      if: ${{ failure() }}
      run: |
        cd ./build
        ls -la
        tail -n 1000 vcpkg-manifest-install.log
    - name: Build
      run: |
        cd ./build
        make config=${{ matrix.conf }}
    - name: Package
      run: ./tools/package_mac.sh -${{ matrix.type }}
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: elem_x64-macos
        path: |
          ./bin
          ./lib
          ./include
